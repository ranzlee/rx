<div id="@(Id)">
    <div 
        id="@($"{Id}-listener")" 
        hx-trigger="@($"{AutoCompleteId}-autocomplete-on-selected")"
        @attributes=@(AdditionalAttributes)>
        @(ChildContent)
    </div>
    <script>
        (function(){
            var listener = document.getElementById('@($"{Id}-listener")');
            listener.addEventListener('htmx:config-request', function(evt) {
                if (evt.target !== listener) {
                    return;
                }
                var path = evt.detail.path ?? '';
                path = path.trimEnd().endsWith('/') ? path.slice(0, -1) : path;
                var selected = document.getElementById('@($"{AutoCompleteId}-autocomplete-selected-id")');
                evt.detail.path = `${path}/${selected.value ?? ''}`;
            });
        })()
    </script>
</div>


@code {
    [Parameter(CaptureUnmatchedValues = true)] public IDictionary<string, object>? AdditionalAttributes { get; set; }
    [Parameter, EditorRequired] public string AutoCompleteId { get; set; } = null!;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string Id { get; set; } = string.Empty;

    protected override void OnParametersSet() {
        if (string.IsNullOrWhiteSpace(Id)) {
            Id = Utilities.GenerateElementId();
        }
    }
}